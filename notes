https://pokeapi.co/api/v2/pokemon?limit=151

Thoughts:

App.jsx will be a component that renders the home page, where you can select the mode of the game. Once the mode of the game is selected, the game will render with a sub-component.

App.jsx will host an effect which retrieves the pokemon data from the API. First will be the first 151. This will store the data in a state.

The game will start based on a true/false state. Name yet to be determined.

Maybe a scoring function based on the max number of cards. i.e. if you have 20 cards max, remembering 5 will get a score of 100. If you get all 20, that's 400 points. Conversely, if you have 10 cards max, you can only ever get 100 points.

-   Not very fair, considering if you remember 10 cards out of 20 you get more than 10/10. It's harder, but not that much harder maybe?
-   Some form of scaling algorithm would be good
-   Point scaling needs to be exponential. Random selection at higher number of cards means you are not likely to repeat, so it'll be easier to get points if it was just based off max number of cards.
-   Blitz mode, or just make every game timed. Gotta be careful with algorithm too to not make it imbalanced

Difficulty levels

-   Easy
-   Medium
-   Hard
-   Insane
-   Custom - No high scores for custom? etc. Maybe a really hard mode would be no names?

Timed function needs to be input. Makes it so you can't cheat

Version control

-   Updating to a new version should reset all high scores
-   This should only be for if the scoring system or something similar changes
-   Not much of a hurry to implement this

<!-- High score section should be position absolute -->

<a href="https://www.textstudio.com/">Font generator</a>

Things to do (in priority): From 8/31 onwards

-   Different game modes - Impossible - Just the many faces of unown - Preset difficulty - Custom - Rapid - Infinite - Progress mode - After you beat a 6 card game, it moves on to 7, and then 8, and so on. - May need a timed mode for this
-   Settings button top right with things like: - Credits - Instructions - High scores screen for every mode
-   Pokemon generations - Issue is right now if you try start the game without the generation being loaded in, it crashes, because pokemon data is technically completely empty - Maybe have a loading animation in the drop down selection menu that can only be clicked when it is ready - **\*** Could just do a loading screen while the api is being fetched
        - Loading screen is the way to go
        - Create an animation for the loading screen. Like a pokeball opening up
        - At the very least a flash after loading with a fading out white screen to 0 opaqueness so the transition from loading to game select screen is more smooth
-   Remove anything after a hyphen
        - Make a new array with the correct names of all pokemon and map it onto the current lists


Way down the line on priority

-   Make it work for mobiles too
-   When the screen width is smaller, there's a white bar at the bottom that hides anything below it. Can't get rid of it because I can't figure out what is causing it
-   Option to remove animations - Particularly for the flash - Can be for the wait time for victory and lose screen too, but that'll be later
-   Option to make the timer faster - This one is a lot harder as it would require complex changes to the scoring algorithm - Could make timed custom ones just not scoreable?
-   Rainbow neon animation on background cards before the win pokeball pops up
-   Custom pokemon set option. i.e. selectable indexes of pokemon

Decision making:

-   Red flash the whole screen or not the header bar. Something looks weird if the header bar isn't flashing, but it looks weird if it is - Covering the header bar makes it so the buttons can't be clicked, which is intentional really
-   Increase the timed game mode? Seems a bit too fast if it includes the turning animation which takes about 1.2-1.4 seconds

Completed: From 8/31 onwards - Commits 8/31

-   Remove timer bar when the game is over and readd it when you press play again. A prop to pass down from the initalize component, and put as a state and modify in the reset game function.
-   Change the input section form to be fully JSX controlled. Values should not be controlled by hardcoding attributes, but instead through functions
-   Styling changes that affected how the game looked when the view width was smaller. Footer bar transparent when not timed as well
-   Added ability to change the max and min number of pokemon without having to go back and change every hard-coded value
-   Put a black bar in the middle of the background color
-   Fill in my readme section
-   Style the header bar better. Use Adam's suggestions for sourcing colour palettes
-   Style buttons better

9/1
-       Started on having pokemon generations. 
                - Currently a small drop down window works
                - Making it so all pokemon generations can be selected now
-   Time check is now saved